openapi: "3.0.3"
info:
  title: Amcef-Assignment
  description: Amcef-Assignment REST API
  contact:
    name: Martin Sedlacko
    email: sedlackomartin@gmail.com
  license:
    name: License of API
  version: "1.0"
paths:
  /post:
    post:
      summary: Post a new post
      operationId: createPost
      tags:
        - Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePost"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        '400':
          description: Bad Request - The request could not be understood or was missing required parameters
        '404':
          description: Not Found - The requested userId could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: Find a post by UserID or PostID
      operationId: findPost
      tags:
        - Post
      parameters:
        - name: userId
          in: query
          description: ID of the user
          required: false
          schema:
            type: integer
            format: int64
        - name: postId
          in: query
          description: ID of the post
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        '404':
          description: Not Found - The requested resource could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /post/{postId}:
    delete:
      summary: Delete a post by PostID
      operationId: deletePost
      tags:
        - Post
      parameters:
        - name: postId
          in: path
          description: ID of the post
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found - The requested resource could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      summary: Update a post by PostID
      operationId: updatePost
      tags:
        - Post
      parameters:
        - name: postId
          in: path
          description: ID of the post
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchPost"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        '400':
          description: Bad Request - The request could not be understood or was missing required parameters
        '404':
          description: Not Found - The requested resource could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    CreatePost:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        title:
          type: string
        body:
          type: string
      required:
        - title
        - body
        - userId
    PatchPost:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        title:
          type: string
        body:
          type: string
      required:
        - title
        - content
        - userId
        - id
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
